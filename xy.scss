//
// Name:        XY float
// Description: XY is a small and very flexible collection of mixins for
//              building grids based on floating elements
// Version:     1.0.0
//
// Author:      Denis Malinochkin
// GitHub:      https://github.com/mrmlnc/xy-float
//
// twitter:     @mrmlnc
//


//
// Container
//

// Creates a container
@mixin xy-make-container($gutter: 30px) {
  margin-right: auto;
  margin-left: auto;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);

  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// Defines of the maximum width for the container
@mixin xy-make-container-width($breakpoint, $width) {
  @media (min-width: $breakpoint) {
    max-width: $width;
  }
}


//
// Row
//

// Creates a row
@mixin xy-make-row($gutter: 30px) {
  margin-left: ($gutter / -2);
  margin-right: ($gutter / -2);

  &:after {
    content: "";
    display: table;
    clear: both;
  }
}


//
// Column
//

// Creates a column
@mixin xy-make-column($gutter: 30px) {
  position: relative;
  min-height: 1px;
  float: left;
  width: 100%;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);
}

// Defines of the maximum width for the column
@mixin xy-make-columns-width($alias, $count) {
  @for $index from 1 through $count {
    &-#{$alias}-#{$index} {
      width: percentage($index / $count);
    }
  }
}

// Defines of offset for the column
@mixin xy-make-columns-offset($alias, $count) {
  @for $index from 0 through $count {
    &-#{$alias}-offset-#{$index} {
      margin-left: percentage($index / $count);
    }
  }
}

// Defines of push for the column
@mixin xy-make-columns-push($alias, $count) {
  @for $index from 0 through $count {
    &-#{$alias}-push-#{$index} {
      left: if($index > 0, percentage($index / $count), auto);
    }
  }
}

// Defines of pull for the column
@mixin xy-make-columns-pull($alias, $count) {
  @for $index from 0 through $count {
    &-#{$alias}-pull-#{$index} {
      right: if($index > 0, percentage($index / $count), auto);
    }
  }
}


//
// Generator
//

// Generator complete collection of styles for a single alias
@mixin xy-make-grid-columns($alias, $breakpoint, $count: none) {
  @if ($count != none) {
    @media (min-width: $breakpoint) {
      @include xy-make-columns-width($alias, $count);
      @include xy-make-columns-offset($alias, $count);
      @include xy-make-columns-push($alias, $count);
      @include xy-make-columns-pull($alias, $count);
    }
  } @else {
    $count: $breakpoint;
    @include xy-make-columns-width($alias, $count);
    @include xy-make-columns-offset($alias, $count);
    @include xy-make-columns-push($alias, $count);
    @include xy-make-columns-pull($alias, $count);
  }
}
